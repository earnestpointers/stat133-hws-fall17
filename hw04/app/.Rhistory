0.2*cleaned_data$Test1[z] +
0.25*cleaned_data$Test2[z]
z <- z + 1
}
calc_grade <- function(v = 100) {
if (v >= 95 & v <= 100){
return('A+')
} else if (v >= 90 & v < 95) {
return('A')
} else if (v >= 88 & v < 90){
return('A-')
} else if (v >= 86 & v < 88){
return('B+')
} else if (v >= 82 & v < 86){
return('B')
} else if (v >= 79.5 & v < 82){
return('B-')
} else if (v >= 77.5 & v < 79.5){
return('C+')
} else if (v >= 70 & v < 77.5){
return('C')
} else if (v >= 60 & v < 70){
return('C-')
} else if (v >= 50 & v < 60){
return('D')
} else if (v >= 0 & v < 50){
return('F')}
}
x <- 1
while (x <= numStudents) {
cleaned_data$Grade[x] <- calc_grade(cleaned_data$Overall[x])
x <- x + 1
}
str(cleaned_data)
data$LAB <- NULL
data$LAB <- NULL
cleaned_data$LAB <- NULL
i <- 1
while(i <= numStudents){
data$Lab[i] <- score_lab(data$ATT[i])
i <- i + 1
}
str(cleaned_data)
library(stringr)
source('../code/functions.R')
rawdata <- read.csv(file = "../data/rawdata/rawscores.csv",
header = TRUE,
sep = ',')
cleaned_data <- rawdata
i <- 1
sink(file = '../output/summary-rawscores.txt')
print('Structure of Raw Scores Data Frame')
cat('\n')
str_data <- str(cleaned_data)
cat('\n')
print('Check data dictionary for column information')
cat('\n')
for (j in cleaned_data) {
cat('Column', i, '\n')
print_stats(summary_stats(j))
cat('\n')
i <- i + 1
}
sink()
i <- 1
while (i <= length(cleaned_data)) {
j <- 1
while (j <= length(cleaned_data[[i]])) {
if (is.na(cleaned_data[[i]][j])) {
cleaned_data[[i]][j] = 0
}
j <- j + 1
}
i <- i + 1
}
numStudents <- dim(cleaned_data)[1]
i <- 1
while(i <= numStudents){
cleaned_data$Lab[i] <- score_lab(cleaned_data$ATT[i])
i <- i + 1
}
cleaned_data$QZ1 <- rescale100(cleaned_data$QZ1, xmin = 0, xmax = 12)
cleaned_data$QZ2 <- rescale100(cleaned_data$QZ2, xmin = 0, xmax = 18)
cleaned_data$QZ3 <- rescale100(cleaned_data$QZ3, xmin = 0, xmax = 20)
cleaned_data$QZ4 <- rescale100(cleaned_data$QZ4, xmin = 0, xmax = 20)
cleaned_data$Test1 <- rescale100(cleaned_data$EX1, xmin = 0, xmax = 80)
cleaned_data$Test2 <- rescale100(cleaned_data$EX2, xmin = 0, xmax = 90)
x <- 1
while (x <= numStudents){
homeworkScores <- c(cleaned_data$HW1[x],
cleaned_data$HW2[x],
cleaned_data$HW3[x],
cleaned_data$HW4[x],
cleaned_data$HW5[x],
cleaned_data$HW6[x],
cleaned_data$HW7[x],
cleaned_data$HW8[x],
cleaned_data$HW9[x])
cleaned_data$Homework[x] <- score_homework(homeworkScores, drop = TRUE)
x <- x + 1
}
y <- 1
while (y <= numStudents){
quizScores <- c(cleaned_data$QZ1[y],
cleaned_data$QZ2[y],
cleaned_data$QZ3[y],
cleaned_data$QZ4[y])
cleaned_data$Quiz[y] <- score_quiz(quizScores, drop = TRUE)
y <- y + 1
}
z <- 1
while (z <= numStudents) {
cleaned_data$Overall[z] <- 0.1*cleaned_data$LAB[z] +
0.3*cleaned_data$Homework[z] +
0.15*cleaned_data$Quiz[z] +
0.2*cleaned_data$Test1[z] +
0.25*cleaned_data$Test2[z]
z <- z + 1
}
calc_grade <- function(v = 100) {
if (v >= 95 & v <= 100){
return('A+')
} else if (v >= 90 & v < 95) {
return('A')
} else if (v >= 88 & v < 90){
return('A-')
} else if (v >= 86 & v < 88){
return('B+')
} else if (v >= 82 & v < 86){
return('B')
} else if (v >= 79.5 & v < 82){
return('B-')
} else if (v >= 77.5 & v < 79.5){
return('C+')
} else if (v >= 70 & v < 77.5){
return('C')
} else if (v >= 60 & v < 70){
return('C-')
} else if (v >= 50 & v < 60){
return('D')
} else if (v >= 0 & v < 50){
return('F')}
}
x <- 1
while (x <= numStudents) {
cleaned_data$Grade[x] <- calc_grade(cleaned_data$Overall[x])
x <- x + 1
}
str(cleaned_data)
x <- 1
while (x <= numStudents) {
cleaned_data$Grade[x] <- calc_grade(cleaned_data$Overall[x])
x <- x + 1
}
z <- 1
while (z <= numStudents) {
cleaned_data$Overall[z] <- 0.1*cleaned_data$Lab[z] +
0.3*cleaned_data$Homework[z] +
0.15*cleaned_data$Quiz[z] +
0.2*cleaned_data$Test1[z] +
0.25*cleaned_data$Test2[z]
z <- z + 1
}
calc_grade <- function(v = 100) {
if (v >= 95 & v <= 100){
return('A+')
} else if (v >= 90 & v < 95) {
return('A')
} else if (v >= 88 & v < 90){
return('A-')
} else if (v >= 86 & v < 88){
return('B+')
} else if (v >= 82 & v < 86){
return('B')
} else if (v >= 79.5 & v < 82){
return('B-')
} else if (v >= 77.5 & v < 79.5){
return('C+')
} else if (v >= 70 & v < 77.5){
return('C')
} else if (v >= 60 & v < 70){
return('C-')
} else if (v >= 50 & v < 60){
return('D')
} else if (v >= 0 & v < 50){
return('F')}
}
x <- 1
while (x <= numStudents) {
cleaned_data$Grade[x] <- calc_grade(cleaned_data$Overall[x])
x <- x + 1
}
str(cleaned_data)
cat('../output/', 'test', '-stats.txt')
cat('../output/', 'test', '-stats.txt', sep = "")
x <- 'Lab'
cat('../output/', 'x, '-stats.txt', sep = "")
cat('../output/', x, '-stats.txt', sep = "")
names(cleaned_data)
names(cleaned_data)[18:22]
names(cleaned_data)[17:22]
fields <- names(cleaned_data)[17:22]
for (i in fields) {
sink(cat('../output/', i, '-stats.txt', sep = ""))
print_stats(summary_stats(cleaned_data[i]))
sink()
}
for (i in fields) {
print(i)
sink(cat('../output/', i, '-stats.txt', sep = ""))
print_stats(summary_stats(cleaned_data[i]))
sink()
}
cleaned_data["Lab"]
class(cleaned_data['Lab'])
class(cleaned_data['Lab'][1])
as.vector(cleaned_data['Lab'])
as.vector(cleaned_data['Lab'][1])
is.numeric(cleaned_data['Labs'])
is.numeric(cleaned_data['Lab'])
typeof(cleaned_data['Lab'])
typeof(cleaned_data['Lab'][1])
is.numeric(cleaned_data['Lab'][1])
is.numeric(cleaned_data['Lab'][[1]])
cleaned_data['Lab'][[1]]
fields <- names(cleaned_data)[17:22]
for (i in fields) {
print(i)
sink(cat('../output/', i, '-stats.txt', sep = ""))
print_stats(summary_stats(cleaned_data[i][[1]]))
sink()
}
warnings()
fields <- names(cleaned_data)[17:22]
for (i in fields) {
sink(file = cat('../output/', i, '-stats.txt', sep = ""))
print_stats(summary_stats(cleaned_data[i][[1]]))
sink()
}
warnings()
print_Stats
print_stats()
fields <- names(cleaned_data)[17:22]
for (i in fields) {
filename <- cat('../output/', i, '-stats.txt', sep = "")
sink(file = filename)
print_stats(summary_stats(cleaned_data[i][[1]]))
sink()
}
fields <- names(cleaned_data)[17:22]
for (i in fields) {
filename <- cat('../output/', i, '-stats.txt', sep = "")
sink(file = filename, append = TRUE)
print('testing')
print_stats(summary_stats(cleaned_data[i][[1]]))
sink()
}
warnings()
sink.number()
filename <- cat('../output/', 'Lab', '-stats.txt', sep = "")
sink(file = filename, append = TRUE)
filename <- cat('../output/', 'Lab', '-stats.txt', sep = "")
sink(file = filename)
filename <- cat('../output/', 'Lab', '-stats.txt', sep = "")
sink(file = filename)
print('testing')
print_stats(summary_stats(cleaned_data[i][[1]]))
library(stringr)
print_stats(summary_stats(cleaned_data[i][[1]]))
sink()
cat('../output/', 'Lab', '-stats.txt', sep = "")
paste('../output/', 'Lab', '-stats.txt', sep = "")
getw()
getwd()
paste('../output/', 'Lab', '-stats.txt', sep = "")
library(stringr)
source('../code/functions.R')
fields <- names(cleaned_data)[17:22]
fields
for (i in fields) {
filename <- paste('../output/', i, '-stats.txt', sep = "")
sink(file = filename, append = TRUE)
print_stats(summary_stats(cleaned_data[i][[1]]))
sink()
}
sink(file = '../output/summary-cleanscores.txt')
str(cleaned_data)
sink()
write.csv(x = cleaned_data, file = '../data/cleandata/cleanscores.csv')
shiny::runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
cleandata <- read.csv(file = '../data/cleandata/cleanscores.csv', sep = ',')
runApp('gradesvis')
runApp('gradesvis')
cleandata
summary(cleandata$Grade)
is.vector(summary(cleandata$Grade))
table(cleandata$Grade)
is.vector(table(cleandata$Grade))
names(summary(cleandata$Grade))
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
counts
names(cleandata)
names(cleandata$Grade)
names(summary(cleandata$Grade))
cleanscores$Grade = factor(cleanscores$Grade,
levels = c('A+', 'A', 'A-',
'B+', 'B', 'B-',
'C+', 'C', 'C-',
'D', 'F'))
cleandata$Grade = factor(cleandata$Grade,
levels = c('A+', 'A', 'A-',
'B+', 'B', 'B-',
'C+', 'C', 'C-',
'D', 'F'))
summary(cleandata$Grade)
runApp('gradesvis')
runApp('gradesvis')
?barplot
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
cleandata$Grade
is.vector(cleandata$Grade)
typeof(cleandata$Grade)
is.factor(cleandata$Grade)
summary(cleandata$Grade)
typeof(summary(cleandata$Grade))
names(summary(cleandata$Grade))
runApp('gradesvis')
cleaned_data
cleaned_data$Grade
is.data.frame(cleaned_data$Grade)
is.data.frame(cleaned_data)
names(cleandata$Grade)
names(cleaned_data$Grade)
is.vector(cleaned_data$Grade)
levels(cleaned_data$Grade)
is.data.frame(cleaned_data$Grade)
is.data.frame(summary(cleaned_data$Grade))
is.vector(summary(cleaned_data$Grade))
is.list(summary(cleaned_data$Grade))
typeof(summary(cleaned_data$Grade))
summary(cleaned_data$Grade)
typeof(table(summary(cleaned_data$Grade)))
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
?fill
runApp('gradesvis')
runApp('gradesvis')
tbl <- data.frame(cleandata$Grade)
tbl
tbl <- data.frame(summary(cleandata$Grade))
tbl
is.data.frame(tbl)
str(tbl)
names(tbl)
row.names(tbl)
tl[1]
tbl[1]
tbl <- data.frame(c('A+', 'A', 'A-',
'B+', 'B', 'B-',
'C+', 'C', 'C-',
'D', 'F'))
tbl
tbl$Grade <- data.frame(c('A+', 'A', 'A-',
'B+', 'B', 'B-',
'C+', 'C', 'C-',
'D', 'F'))
tbl
grades <- c('A+', 'A', 'A-',
'B+', 'B', 'B-',
'C+', 'C', 'C-',
'D', 'F')
freq <- summary(cleandata$Grade)
tbl <- data.frame(grades, freq, freq/length(grades))
tbl
freq
sum(freq)
freq <- summary(cleandata$Grade)
tbl <- data.frame("Grades" = grades,
"Freq" = freq,
"Prop" = freq/sum(freq))
tbl
tbl <- data.frame("Grades" = grades,
"Freq" = freq,
"Prop" = round(freq/sum(freq), digits = 2))
tbl
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
cleandata
runApp('gradesvis')
cleandata
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
runApp('gradesvis')
